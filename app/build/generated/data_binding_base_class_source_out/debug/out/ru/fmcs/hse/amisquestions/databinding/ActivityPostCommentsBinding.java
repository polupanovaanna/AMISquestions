// Generated by view binder compiler. Do not edit!
package ru.fmcs.hse.amisquestions.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.fmcs.hse.amisquestions.PostItemView;
import ru.fmcs.hse.amisquestions.R;

public final class ActivityPostCommentsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView RecyclerViewComments;

  @NonNull
  public final PostItemView postItem;

  @NonNull
  public final Toolbar toolbarPc;

  private ActivityPostCommentsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView RecyclerViewComments, @NonNull PostItemView postItem,
      @NonNull Toolbar toolbarPc) {
    this.rootView = rootView;
    this.RecyclerViewComments = RecyclerViewComments;
    this.postItem = postItem;
    this.toolbarPc = toolbarPc;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostCommentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostCommentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_comments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostCommentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecyclerViewComments;
      RecyclerView RecyclerViewComments = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerViewComments == null) {
        break missingId;
      }

      id = R.id.post_item;
      PostItemView postItem = ViewBindings.findChildViewById(rootView, id);
      if (postItem == null) {
        break missingId;
      }

      id = R.id.toolbar_pc;
      Toolbar toolbarPc = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPc == null) {
        break missingId;
      }

      return new ActivityPostCommentsBinding((ConstraintLayout) rootView, RecyclerViewComments,
          postItem, toolbarPc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
